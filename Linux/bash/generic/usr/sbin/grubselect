#!/bin/bash
# Version=20251009.01
# Choose grub entry to boot once or permanent

for i in "$@" ; do
  if [[ $i == "-V" ]] ; then
     echo  $(basename $0) $Version

     echo "Copyright (C) 2017 Christian Scholz. Alle Rechte vorbehalten."
     echo "Dieses Script ist unter GPL v.2. veröffentlicht"
     echo
     echo "Dieses Script wird unter Ausschluss vom Gewährleistung und Garantie bereitgestellt, soweit dies durch Gesetze ermöglicht wird."
     exit 1
  fi
done

function grub-ident {

  if [ -f "/boot/grub/grub.cfg" ]; then
    echo "> Grub v1 found!"
    grubV="grub"
    file="/boot/grub/grub.cfg"
    grub_reboot=$(which grub-reboot)
    grub_editenv=$(which grub-editenv)
    update_grub=$(which update-grub)
    grub_reboot=$(which grub-reboot)
    grub_set_default=$(which grub-set-default)
    grub_editenv=$(which grub-editenv)
    defEntry=$(grub-editenv list | cut -d "=" -f 2)
  elif  [ -f "/boot/grub2/grub.cfg" ]; then
    echo "> Grub v2 found!"
    grubV="grub2"
    file="/boot/grub2/grub.cfg"
    grub_reboot=$(which grub2-reboot)
    grub_editenv=$(which grub2-editenv)
    update_grub="$(which grub2-mkconfig) -o $file"
    grub_reboot=$(which grub2-reboot)
    grub_set_default=$(which grub2-set-default)
    grub_editenv=$(which grub2-editenv)
    defEntry=$(grub2-editenv list | cut -d "=" -f 2)
  else
    echo "No suitable grub found. Abort!"
    exit
  fi
}




# choice counter
i=0
# entry counter
j=0

# counter for sub entries 0/1
submenu=0

grub-ident

echo -e "Choice\tEntry\tName"
while read -r line
do
  if [[ $line == "submenu"* ]]; then
    submenu=1
    k=$j">"
    j=0
  fi

  if [[ $submenu == 1 ]]; then
    entryid=$k$j

    # counter for open and close sub brackets {}
    if [[ $line == *"{"* ]]; then
      let "h=h+1"
    fi
    if [[ $line == *"}"* ]]; then
      let "h=h-1"
    fi
  else
    k=
  fi

  # reset submenu when subenu entry close
  if [[ $h == 0 ]]; then
    submenu=0
  fi

  if [[ $line == *"menuentry '"* ]]; then
#    echo $line |awk -F\' '/menuentry / {print $2}'
#    echo -e "$i \t$k$j \t$(echo $line |cut -d "'" -f 2)"

    #Grub
    if [ "$grubV" == "grub" ]; then
      if [ "$k$j" == "$defEntry" ]; then
         echo -e "$i (*) \t$k$j \t$(echo $line |cut -d "'" -f 2)"
      else
         echo -e "$i \t$k$j \t$(echo $line |cut -d "'" -f 2)"
      fi
    fi

    # Grub2
    if [ "$grubV" == "grub2" ]; then
      if [ "$(echo $line | cut -d "'" -f 2)" == "$defEntry" ]; then
         echo -e "$i (*) \t$k$j \t$(echo $line |cut -d "'" -f 2)"
      else
         echo -e "$i \t$k$j \t$(echo $line |cut -d "'" -f 2)"
      fi
    fi

    array[$i]=$k$j
    let "j=j+1"
    let "i=i+1"
  fi
done < "$file"

echo -n "Your choice: "
read sel_entry

read -r -p "Boot kernel once or permanent? [o/p] " response
case $response in
    [oO])
        $grub_reboot "${array[$sel_entry]}"
        $grub_editenv list
        ;;
    [pP])
        sed -i 's/GRUB_DEFAULT=.*/GRUB_DEFAULT=saved/g' /etc/default/grub
        $update_grub
        $grub_set_default "${array[$sel_entry]}"
        $grub_editenv list
        ;;
    *)
        echo "Wrong selection. Aborted."
        exit
        ;;
esac
