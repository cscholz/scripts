#!/bin/bash

function grub-ident {

  if [ -f "/boot/grub/grub.cfg" ]; then
    echo "> Grub found!"
    file="/boot/grub/grub.cfg"
    grub_reboot=$(which grub-reboot)
    grub_editenv=$(which grub-editenv)
    update_grub=$(which update-grub)
    grub_reboot=$(which grub-reboot)
    grub_set_default=$(which grub-set-default)
    grub_editenv=$(which grub-editenv)

  elif  [ -f "/boot/grub2/grub.cfg" ]; then
    echo "> Grub2 found!"
    file="/boot/grub2/grub.cfg"
    grub_reboot=$(which grub2-reboot)
    grub_editenv=$(which grub2-editenv)
    update_grub="$(which grub2-mkconfig) -o $file"
    grub_reboot=$(which grub2-reboot)
    grub_set_default=$(which grub2-set-default)
    grub_editenv=$(which grub2-editenv)
  else
    echo "No suitable grub found. Abort!"
    exit
  fi
}




# choice counter
i=0
# entry counter
j=0

# counter for sub entries 0/1
submenu=0

grub-ident

echo -e "Choice\tEntry\tName"
while read -r line
do
  if [[ $line == "submenu"* ]]; then
    submenu=1
    k=$j">"
    j=0
  fi

  if [[ $submenu == 1 ]]; then
    entryid=$k$j

    # counter for open and close sub brackets {}
    if [[ $line == *"{"* ]]; then
      let "h=h+1"
    fi
    if [[ $line == *"}"* ]]; then
      let "h=h-1"
    fi
  else
    k=
  fi

  # reset submenu when subenu entry close
  if [[ $h == 0 ]]; then
    submenu=0
  fi

  if [[ $line == *"menuentry '"* ]]; then
#    echo $line |awk -F\' '/menuentry / {print $2}'
    echo -e "$i \t$k$j \t$(echo $line |cut -d "'" -f 2)"
    array[$i]=$k$j
    let "j=j+1"
    let "i=i+1"
  fi
done < "$file"

echo -n "Your choice: "
read sel_entry

read -r -p "Boot kernel once or permanent? [o/p] " response
case $response in
    [oO])
        $grub_reboot "${array[$sel_entry]}"
        $grub_editenv list
        ;;
    [pP])
        sed -i 's/GRUB_DEFAULT=.*/GRUB_DEFAULT=saved/g' /etc/default/grub
        $update_grub
        $grub_set_default "${array[$sel_entry]}"
        $grub_editenv list
        ;;
    *)
        echo "Wrong selection. Aborted."
        exit
        ;;
esac

